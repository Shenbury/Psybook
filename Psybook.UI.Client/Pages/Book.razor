@page "/Book"
@using Psybook.Objects.DbModels
@using Psybook.Objects.Enums
@using Psybook.Services.UI.DataLoaders

@inject IBookingLoaderService bookingLoaderService;

<PageTitle>Booking Form</PageTitle>

<MudText Typo="Typo.h2" GutterBottom="true">Book In Experience</MudText>
<MudText Typo="Typo.h5" GutterBottom="true">Our empowering booking system</MudText>

<MudAlert Severity="Severity.Normal" ContentAlignment="HorizontalAlignment.Start">
    You can see the WMSP VIP details here:
    <MudLink Href="https://www.wmsp.co.uk/vip-experiences" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
        <b>www.wmsp.co.uk/vip-experiences</b>
    </MudLink>
</MudAlert>

<br />

<MudForm @ref="_form" @bind-IsValid="@_success" @bind-Errors="@_errors">

<MudTextField @bind-Value="_firstName" Label="First Name" Variant="Variant.Outlined"></MudTextField>

<MudTextField @bind-Value="_lastName" Label="Last Name" Variant="Variant.Outlined"></MudTextField>

<MudTextField @bind-Value="_contactNumber" Label="Contact Number" Variant="Variant.Outlined"></MudTextField>

<MudTextField @bind-Value="_firstLineAddress" Label="First Line Address" Variant="Variant.Outlined"></MudTextField>

<MudTextField @bind-Value="_postcode" Label="Postcode" Variant="Variant.Outlined"></MudTextField>

<MudSelect @bind-Value="_bookExperiences" Label="Experience to book" Variant="Variant.Outlined">
    @foreach (var bookExperiences in Enum.GetValues(typeof(BookExperiences)).Cast<BookExperiences>())
    {
        if (bookExperiences != BookExperiences.None)
        {
            <MudSelectItem Value="bookExperiences">@bookExperiences</MudSelectItem>
        }
    }
</MudSelect>

<br />

<MudButton OnClick="Save" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="Color.Info" Size="Size.Medium">Save</MudButton>

</MudForm>

    @code {
    private bool _success;
    private string[] _errors = { };
    private MudForm _form;

    private string _firstName { get; set; }

    private string _lastName { get; set; }

    private string _contactNumber { get; set; }

    private string _firstLineAddress { get; set; }

    private string _postcode { get; set; }

    private BookExperiences _bookExperiences { get; set; }

    private DateTime _start { get; set; }

    private DateTime _end { get; set; }


    private async Task<IEnumerable<BookExperiences>> Search(string value, CancellationToken token)
    {
        return Enum.GetValues(typeof(BookExperiences)).Cast<BookExperiences>();
    }

    private async Task Save()
    {
        await bookingLoaderService.SaveCalendarSlot(new CalendarSlot
            {
                Title = "Giraffe Experience",
                Color = "primary",
                Location = "Enclosure",
                Start = _start,
                End = _end,
                AllDay = false,
                Text = "Some information"
            });
    }
}